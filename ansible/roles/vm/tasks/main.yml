- name: Instalar dependencias previas
  apt:
    name:
      - software-properties-common
      - uidmap
    state: present
    update_cache: true

- name: Añadir clave GPG del repositorio de Podman
  ansible.builtin.apt_key:
    url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/Release.key
    state: present

- name: Añadir repositorio de Podman
  ansible.builtin.apt_repository:
    repo: deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /
    state: present

- name: Actualizar apt
  ansible.builtin.apt:
    update_cache: yes

- name: Instalar Podman
  apt:
    name: podman
    state: present

- name: Login en ACR
  containers.podman.podman_login:
    registry: acrpractico2demo.azurecr.io
    username: "{{ acr_username }}"
    password: "{{ acr_password }}"
  become: true
  become_user: root

- name: Descargar imagen de la app
  containers.podman.podman_image:
    name: acrpractico2demo.azurecr.io/webapp:casopractico2
  become: true
  become_user: root

- name: Lanzar contenedor
  containers.podman.podman_container:
    name: webapp
    image: acrpractico2demo.azurecr.io/webapp:casopractico2
    state: started
    ports:
      - "443:443"
    restart_policy: always
  become: true
  become_user: root

- name: Generar unidad systemd para el contenedor
  containers.podman.podman_generate_systemd:
    name: webapp
    restart_policy: always
    use_names: true
    dest: /etc/systemd/system
  become: true
  become_user: root

- name: Recargar systemd
  systemd:
    daemon_reload: yes
  become: true
  become_user: root

- name: Habilitar y arrancar el contenedor como servicio
  systemd:
    name: container-webapp.service
    enabled: yes
    state: started
  become: true
  become_user: root
